#include "shell.h"


/**
 * init_shell - Fuction to execute simple shell

 int init_shell(char *prompt, char *sh_command, size_t aux)
 {
 	char **argv, *errorline, *line = NULL;
	pid_t child_pid;
	ssize_t linelen = 0;
	int status, argvst, argc = 0;

	while (1)
	{
	
		ISATTYPROMPT(prompt, _strlen(prompt));
		line = _calloc(100, sizeof(*line));
		if (line == NULL)
			return (1);
		linelen = getline(&line, &aux, stdin);
		argc = count_words(line);
		if (linelen == 1 || argc == linelen - 1)
		{
			free(line);
			continue;
		}
		if (linelen == -1 || _strcmp(line, "exit\n") == 0)
			break;
		argv = _calloc((argc + 2), sizeof(*argv));
		if (argv == NULL)
			break;
		argvst = linetoargv(line, argv, linelen);
		errorline = get_errorline(sh_command, argv[0]);
		if (argvst >= 0)
		{
			child_pid = fork();
			if (child_pid == 0)
				execute(argv);
			else
				wait(&status);
			FREELAR(line, argvst, argv[0], argv, errorline);
		}
		else
			FREEWRITE(line, argv, errorline);
		ISATTYOUT;
	}
 }

